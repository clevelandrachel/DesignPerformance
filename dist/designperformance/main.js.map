{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/componentlist.service.ts","webpack:///./src/app/components/components.component.css","webpack:///./src/app/components/components.component.html","webpack:///./src/app/components/components.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/nav-links.component.ts","webpack:///./src/app/resources/resources.component.html","webpack:///./src/app/resources/resources.component.ts","webpack:///./src/app/sequences/sequences.component.html","webpack:///./src/app/sequences/sequences.component.ts","webpack:///./src/app/time/time.component.css","webpack:///./src/app/time/time.component.html","webpack:///./src/app/time/time.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\nimport { NgModule, Component } from '@angular/core';\n// import { RouterModule, Routes, PreloadAllModules } from '@angular/router';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { SequencesComponent } from './sequences/sequences.component';\nimport { ComponentsComponent } from './components/components.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'resources',\n    component: ResourcesComponent\n  },\n//   {\n//     path: 'sequences',\n//     component: SequencesComponent\n//  },\n  {\n    path: 'components',\n    component: ComponentsComponent\n  },\n  {\n      path: '',\n      redirectTo: '/home',\n      pathMatch: 'full'\n    },\n  {\n    path: 'home',\n    component: HomeComponent,\n    data: {\n      bodyClass: 'layout-home',\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<clr-main-container>\\n  <clr-header class=\\\"header-6\\\">\\n      <div class=\\\"branding\\\">\\n          <a routerLink=\\\"/home\\\" class=\\\"logo-and-title\\\">\\n              <!-- Design for Interaction Guide -->\\n              <span class=\\\"title\\\">Design for Performance</span>\\n          </a>\\n      </div>\\n      <div class=\\\"divider\\\"></div>\\n      <div class=\\\"header-nav\\\" [clr-nav-level]=\\\"1\\\">\\n          <a id=\\\"home-link\\\" class=\\\"nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><span class=\\\"nav-text\\\">Home</span></a>\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/components\\\" routerLinkActive=\\\"active\\\"><span class=\\\"nav-text\\\">Components</span></a>\\n          <!-- <a class=\\\"nav-link\\\" routerLink=\\\"/sequences\\\" routerLinkActive=\\\"active\\\"><span class=\\\"nav-text\\\">Sequences</span></a>-->\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/resources\\\" routerLinkActive=\\\"active\\\"><span class=\\\"nav-text\\\">Resources</span></a>\\n      </div>\\n      <div class=\\\"settings\\\">\\n      </div>\\n  </clr-header>\\n\\n<div class=\\\"content-container\\\">\\n    <div class=\\\"content-area\\\">\\n      </div>\\n       <router-outlet></router-outlet>\\n       <nav class=\\\"sidenav\\\" [clr-nav-level]=\\\"2\\\">\\n          <section class=\\\"sidenav-content\\\">\\n\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/components\\\" routerLinkActive=\\\"active\\\"\\n              [routerLinkActiveOptions]=\\\"{exact:true}\\\">Component Status</a>\\n\\n           <section class=\\\"nav-group collapsible\\\">\\n               <input id=\\\"tab1\\\" type=\\\"checkbox\\\">\\n               <label for=\\\"tab1\\\">Components</label>\\n               <ul class=\\\"nav-list\\\">\\n                    <!-- <nav-links type=\\\"component\\\"></nav-links> -->\\n               </ul>\\n           </section>\\n          </section>\\n      </nav>\\n\\n  </div>\\n\\n</clr-main-container>\\n<!--  -->\\n\"","/* tslint:disable */\nimport { Component, OnInit } from '@angular/core';\nimport { ElectronService } from 'ngx-electron';\nimport { COMPONENTLISTSERVICE } from './componentlist.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  host: {\n    '[class.content-container]': 'true',\n    '[class.content-area]': 'true',\n  },\n  providers: [COMPONENTLISTSERVICE]\n})\nexport class AppComponent {\n  constructor(private _electronService: ElectronService) {}\n  launchWindow() {\n    this._electronService.shell.openExternal('https://coursetro.com');\n  }\n}\n","/* tslint:disable */\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClarityModule } from '@clr/angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TimeComponent } from './time/time.component';\nimport { SequencesComponent } from './sequences/sequences.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { ComponentsComponent } from './components/components.component';\nimport { NgxElectronModule } from 'ngx-electron';\nimport { HomeComponent } from './home/home.component';\nimport { COMPONENTLISTSERVICE } from './componentlist.service';\nimport { NavLinksComponent } from './nav-links.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TimeComponent,\n    SequencesComponent,\n    ResourcesComponent,\n    ComponentsComponent,\n    HomeComponent,\n    NavLinksComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ClarityModule,\n    NgxElectronModule,\n    BrowserAnimationsModule\n  ],\n  providers: [COMPONENTLISTSERVICE],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ComponentsModule } from './components/components.module';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\nexport interface COMPONENT {\n  url: string;\n  text: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class COMPONENTLISTSERVICE {\ncomponent = 'componentslist.json';\n\nconstructor(private http: HttpClient) { }\n\n\ngetComponent() {\n  return this.http.get<COMPONENT>(this.component);\n\n}\n\n\n  getComponent_1() {\n    return this.http.get(this.component);\n  }\n\n  getComponent_2() {\n    // now returns an Observable of Config\n    return this.http.get<COMPONENT>(this.component);\n  }\n\n  getComponent_3() {\n    return this.http.get<COMPONENT>(this.component)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getComponentResponse(): Observable<HttpResponse<COMPONENT>> {\n    return this.http.get<COMPONENT>(\n      this.component, { observe: 'response' });\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n  makeIntentionalError() {\n    return this.http.get('not/a/real/url')\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n}\n","module.exports = \".error {color: red;}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21wb25lbnRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxVQUFVLENBQUMiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NvbXBvbmVudHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvciB7Y29sb3I6IHJlZDt9XG4iXX0= */\"","module.exports = \"<section class=\\\"dox-content\\\" hash-listener #scrollable>\\n    <div class=\\\"dox-content-wrapper\\\">\\n        <a id=\\\"top\\\"></a>\\n    <h1>Component Performance Targets</h1>\\n\\n    <p>\\n      Meaningful, quantifiable, and testable component targets can be categorized for application speed, scalability and stability according to the following service level indicators.\\n    </p>\\n    <p>A component is a simple, independent microservice operation (sometimes called distributed systems, or distributed services) of a user interface that communicates via an API.  Microservice architectures help solve common, complex issues like speed and scalability, while also supporting continuous improvement and continuous delivery. The composition of UI components should be aligned and tested with real users. </p>\\n\\n    <p class=\\\"component-legend\\\">\\n        <span class=\\\"component-legend-item\\\">\\n        </span>\\n        <span class=\\\"component-legend-item\\\">\\n        </span>\\n        <span class=\\\"component-legend-item\\\">\\n        </span>\\n        <span class=\\\"component-legend-item\\\">\\n        </span>\\n    </p>\\n\\n    <table class=\\\"table table-component-list bump-down\\\" style=\\\"max-width: 880px\\\">\\n        <thead>\\n          <th>Item</th>\\n          <th>Target</th>\\n          <th>Releaseable</th>\\n          <th class=\\\"hidden-xs-down\\\">Goal</th>\\n          <th>Description</th>\\n          <th class=\\\"hidden-xs-down\\\">Link</th>\\n        </thead>\\n        <tbody >\\n          <tr *ngFor=\\\"let item of component\\\" class=\\\"left\\\">\\n            <td>\\n              <a *ngIf=\\\"item.url\\\">{{item.text}}</a>\\n              <span *ngIf=\\\"!item.url\\\">{{item.text}}</span>\\n\\n            </td>\\n            <td>\\n              <span class=\\\"item.target\\\">{{item.target}}</span>\\n            </td>\\n            <td>\\n              <span class=\\\"item.releasable\\\">{{item.releasable}}</span>\\n            </td>\\n            <td class=\\\"hidden-xs-down\\\">\\n              <span class=\\\"item.goal\\\">{{item.goal}}</span>\\n            </td>\\n            <td>\\n              <span class=\\\"item.description\\\">{{item.description}}</span>\\n            </td>\\n            <td><a *ngIf=\\\"item.url\\\">{{item.url}}</a>\\n\\n            </td>\\n          </tr>\\n        </tbody>\\n    </table>\\n    <h3>Performance Targets</h3>\\n\\n    <p>Performance targets are used to evaluate and observe latency tolerance, which is information of how much a user waits for a response before taking the next action like application abandonment or refresh.  These targets translate to service level indicators explained below.  </p>\\n    <p>Quantitative results from these targets provide the best outcome for the user experience of the design. Some key tenants of performance targets are:\\n    </p>\\n\\n    <ul class=\\\"list\\\">\\n        <li>They are used to improve the product quality.</li>\\n        <li>They provide easy and clear output of the activity and identify areas that need more attention.</li>\\n        <li>They help in comparing the results of different tests to find out the impact of any UI changes.</li>\\n        <li>They provide guidance on the root cause of problem.</li>\\n        <li>They establish a baseline for user acceptance tests.</li>\\n        <li>They shape the user interaction.</li>\\n        <li>They can be observed and measured accurately by people.</li>\\n        <li>They can be measured on actual users.</li>\\n        <li>They provide insights for both regression testing and future enhancements.</li>\\n    </ul>\\n    <p>Traditional performance targets like load time or DOMContentLoaded time can be considered unreliable performance targets if the user thinks the app is loaded. The key tenants above help guide the goals and service level indicators of the metrics.</p>\\n\\n</div>\\n</section>\\n\"","import { Component } from '@angular/core';\nimport COMPONENT from './../componentslist.json';\nimport { COMPONENTLISTSERVICE } from './../componentlist.service';\nimport 'rxjs';\n\n@Component({\n  selector: 'app-components',\n  templateUrl: './components.component.html',\n  styleUrls: ['./components.component.css'],\n  // tslint:disable-next-line:use-host-property-decorator\n  host: {\n    '[class.content-container]': 'true',\n    '[class.content-area]': 'true',\n  },\n  providers: [ COMPONENTLISTSERVICE ]\n})\nexport class ComponentsComponent {\n  component = COMPONENT.list;\n\n  getUrl(item) {\n    return item.url.split('#')[0];\n  }\n\n  getFragment(item) {\n    return item.url.split('#')[1];\n  }\n}\n\n\n","module.exports = \"\\n<section class=\\\"dox-content\\\">\\n    <h1 id=\\\"introduction\\\">Welcome </h1>\\n    <p>Design for Performance was created from the evolving need of software technology to continually strive to discover and address the needs of human computer interaction. The designs discussed can be applied to any web technology, regardless of the underlying framework.</p>\\n\\n    <p>This site was inspired by and built with <a href=\\\"https://clarity.design/\\\" target=\\\"_blank\\\">Project Clarity</a>, an open source design system that brings together UX guidelines, HTML/CSS framework, and Angular components. More to Come on this Site Spring 2019.\\n    </p>\\n\\n    <h2 id=\\\"howToUse\\\">How to Use This Guide</h2>\\n    <p>There are three approaches for utilizing Design for Interaction: just the Interaction guidance, Interaction guidance and the HTML/CSS/JS framework, or put everything together with the Clarity Design System.</p>\\n\\n    <h3 id=\\\"uiInstallation\\\">About Design for Performance</h3>\\n    <p>Understanding user experience in the context of interaction design can aid in the ability to detect and recommend ways to improve performance in application design. In turn, improving the usability of application design can increase customer satisfaction in products.</p>\\n    <p>The guidance outlined in this document relates to the performance of user interaction focused on instrumenting systems and applications to collect metrics and logs and then validating the architecture through user insights.</p>\\n    <p>More background and resources are provided on the site.\\n    </p>\\n\\n    <h2 id=\\\"attributions\\\">Attributions</h2>\\n    <p>See more attribution information found on the Project Clarity website  <a href=\\\"https://github.com/vmware/clarity/blob/master/ATTRIBUTION.md\\\" target=\\\"_blank\\\">legal\\n        attributions</a> for third party software.\\n    </p>\\n    <div style=\\\"visibility: hidden; height: 80vh;\\\">This is a spacer to force sidenav highlighting on scroll</div>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n   // tslint:disable-next-line:use-host-property-decorator\n   host: {'[class.content-container]': 'true',\n  },\n})\nexport class HomeComponent {}\n","/* tslint:disable */\nimport { Component, Input } from '@angular/core';\nimport COMPONENT from './componentslist.json';\n// import * as COMPONENTS from 'componentslist.json';\nimport { Injectable } from '@angular/core';\nimport { COMPONENTLISTSERVICE } from './componentlist.service';\nimport { HttpClient } from '@angular/common/http';\nimport 'rxjs';\n\n@Component({\n selector: 'nav-links',\n template: `\n        <ng-container *ngFor=\"let component of components\">\n            <li *ngIf=\"component.url && component.type == type\">\n                <a class=\"nav-link\" [routerLink]=\"component.url\" routerLinkActive=\"active\">\n                    {{component.text}}\n                </a>\n            </li>\n        </ng-container>\n    `,\n})\n\nexport class NavLinksComponent {\n\n components = COMPONENT.list;\n\n\n  @Input() type: string;\n}\n","module.exports = \"<section class=\\\"dox-content\\\">\\n    <div class=\\\"dox-content-wrapper\\\">\\n\\n  <h1>Additional Resources</h1>\\n\\n  <p>\\n    The following documents contain additional external perspectives on this topic.\\n  </p>\\n\\n  <h2>Articles</h2>\\n  <ul class=\\\"list\\\">\\n      <li><a href=\\\"https://developers.google.com/web/fundamentals/performance/rail\\\" target=\\\"_blank\\\">Web Performance Fundamentals</a></li>\\n      <li><a href=\\\"https://ux.stackexchange.com/questions/58163/acceptable-waiting-time-for-users-in-time-sensitive-actions\\\" target=\\\"_blank\\\">Wait Times for Users</a></li>\\n      <li><a href=\\\"http://www.agileload.com/agileload/blog/2013/02/18/web-applications-performance-testing-metrics\\\" target=\\\"_blank\\\">Performance Testing Metrics</a></li>\\n      <li><a href=\\\"http://www.webperformancetoday.com/2010/06/15/everything-you-wanted-to-know-about-web-performance/\\\" target=\\\"_blank\\\">Web Performance</a></li>\\n      <li><a href=\\\"https://www.nngroup.com/articles/response-times-3-important-limits/\\\" target=\\\"_blank\\\">NNGroup Response Time Limits</a></li>\\n      <li><a href=\\\"https://www.nngroup.com/articles/website-response-times/\\\" target=\\\"_blank\\\">Website Response Times</a> </li>\\n  </ul>\\n</div>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-resources',\n  templateUrl: './resources.component.html',\n  // tslint:disable-next-line:use-host-property-decorator\n  host: {'[class.content-container]': 'true',\n},\n})\nexport class ResourcesComponent {\n\n\n}\n","module.exports = \"<h1>\\n    Welcome to Time to Use\\n  </h1>\\n  <!-- <button (click)=\\\"onclick()\\\">Service</button>  -->\\n\"","/* tslint:disable */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sequences',\n  templateUrl: 'sequences.component.html',\n  host: {\n    '[class.content-container]': 'true',\n  },\n})\nexport class SequencesComponent {\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWUvdGltZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"/* tslint:disable */\\n<!-- <h2>{{time.name | uppercase}} Details</h2>\\n<div><span>id: </span>{{time.id}}</div>\\n<div><span>name: </span>{{time.name}}</div> -->\\n\"","/* tslint:disable */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Time } from '../time';\n\n@Component({\n  selector: 'app-time',\n  templateUrl: './time.component.html',\n  styleUrls: ['./time.component.css']\n})\nexport class TimeComponent implements OnInit {\n  time: Time[];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}